{"ast":null,"code":"// src/openaiService.js\nimport axios from 'axios';\nconst API_URL = 'https://api.openai.com/v1/engines/davinci-codex/completions'; // Update to the appropriate URL for the model you are using\n\nconst openaiService = async prompt => {\n  const response = await axios.post(API_URL, {\n    prompt: prompt,\n    max_tokens: 150,\n    temperature: 0.7\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer sk-proj-shUOzy7qRiqdiezgetdPT3BlbkFJqxRa36AqPXbi49Fu8lMD` // Replace with your OpenAI API key\n    }\n  });\n  return response.data.choices[0].text;\n};\nexport default openaiService;","map":{"version":3,"names":["axios","API_URL","openaiService","prompt","response","post","max_tokens","temperature","headers","data","choices","text"],"sources":["/Users/sachinallums/my-app/src/openaiService.js"],"sourcesContent":["// src/openaiService.js\nimport axios from 'axios';\n\nconst API_URL = 'https://api.openai.com/v1/engines/davinci-codex/completions'; // Update to the appropriate URL for the model you are using\n\nconst openaiService = async (prompt) => {\n    const response = await axios.post(\n        API_URL,\n        {\n            prompt: prompt,\n            max_tokens: 150,\n            temperature: 0.7,\n        },\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer sk-proj-shUOzy7qRiqdiezgetdPT3BlbkFJqxRa36AqPXbi49Fu8lMD`, // Replace with your OpenAI API key\n            },\n        }\n    );\n\n    return response.data.choices[0].text;\n};\n\nexport default openaiService;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6DAA6D,CAAC,CAAC;;AAE/E,MAAMC,aAAa,GAAG,MAAOC,MAAM,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC7BJ,OAAO,EACP;IACIE,MAAM,EAAEA,MAAM;IACdG,UAAU,EAAE,GAAG;IACfC,WAAW,EAAE;EACjB,CAAC,EACD;IACIC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,iEAAiE,CAAE;IACxF;EACJ,CACJ,CAAC;EAED,OAAOJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;AACxC,CAAC;AAED,eAAeT,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}