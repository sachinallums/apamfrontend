{"ast":null,"code":"var _jsxFileName = \"/Users/sachinallums/my-app/src/ChatInterface.js\",\n  _s = $RefreshSig$();\n// src/ChatInterface.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        from: 'user',\n        text: input\n      };\n      setMessages([...messages, userMessage]);\n      setInput('');\n      try {\n        const response = await fetch('/api/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            prompt: input\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const botMessage = {\n          from: 'bot',\n          text: data.choices[0].message.content.trim()\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } catch (error) {\n        console.error('Error:', error);\n        setMessages(prevMessages => [...prevMessages, {\n          from: 'bot',\n          text: 'Sorry, I am having trouble understanding right now. Please try again later.'\n        }]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.from}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","from","text","response","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","status","data","json","botMessage","choices","message","content","prevMessages","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/sachinallums/my-app/src/ChatInterface.js"],"sourcesContent":["// src/ChatInterface.js\n\nimport React, { useState } from 'react';\n\nconst ChatInterface = () => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n\n    const handleSend = async () => {\n        if (input.trim()) {\n            const userMessage = { from: 'user', text: input };\n            setMessages([...messages, userMessage]);\n            setInput('');\n\n            try {\n                const response = await fetch('/api/chat', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ prompt: input }),\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n\n                const data = await response.json();\n                const botMessage = { from: 'bot', text: data.choices[0].message.content.trim() };\n                setMessages((prevMessages) => [...prevMessages, botMessage]);\n            } catch (error) {\n                console.error('Error:', error);\n                setMessages((prevMessages) => [\n                    ...prevMessages,\n                    { from: 'bot', text: 'Sorry, I am having trouble understanding right now. Please try again later.' },\n                ]);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h1>Chat Interface</h1>\n            <div className=\"chat-box\">\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.from}`}>\n                        {message.text}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                placeholder=\"Type your message...\"\n            />\n            <button onClick={handleSend}>Send</button>\n        </div>\n    );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}