{"ast":null,"code":"var _jsxFileName = \"/Users/sachinallums/curis-apam/src/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  currentSkill,\n  currentScenario,\n  onNavigate\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [feedbackVisible, setFeedbackVisible] = useState(true); // State to handle feedback visibility\n  const chatBoxRef = useRef(null);\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const handleSend = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        from: 'user',\n        text: input\n      };\n      setMessages([...messages, userMessage]);\n      setInput('');\n      try {\n        const response = await fetch('/api/chatbot-response');\n        const data = await response.json();\n        const botMessage = {\n          from: 'robot',\n          text: data.botResponse || \"placeholder\"\n        };\n\n        // Introduce a delay before adding the bot's message\n        setTimeout(() => {\n          setMessages(prevMessages => [...prevMessages, botMessage]);\n        }, 600);\n      } catch (error) {\n        console.error('Error fetching chatbot response:', error);\n        const botMessage = {\n          from: 'robot',\n          text: \"Failed to fetch response\"\n        };\n\n        // Introduce a delay before adding the bot's message\n        setTimeout(() => {\n          setMessages(prevMessages => [...prevMessages, botMessage]);\n        }, 600);\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  const handleBackToSelectSkills = () => {\n    onNavigate('start');\n  };\n  const handleFinish = () => {\n    const userConfirmed = window.confirm('Would you like to complete the simulation? You will be asked to fill out a google form about your experience.');\n    if (userConfirmed) {\n      window.open('https://forms.gle/dUgqouTzYBdy6jF67', '_blank');\n    }\n  };\n  const toggleFeedbackVisibility = () => {\n    // Function to toggle feedback visibility\n    setFeedbackVisible(!feedbackVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToSelectSkills,\n      className: \"back-button\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Learning Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Improve your \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [currentSkill, \" skills\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 30\n      }, this), \" with Roberto by using some of the different strategies suggested below. When you feel like you've achieved the learning goal, click on the finish button in the lower left or revisit an old chat by using the menu on the left-hand side.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatBoxRef,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.from}`,\n        children: [message.from === 'robot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"robot-name\",\n          children: \"Roberto the Robot \\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), feedbackVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"feedback-header\",\n        onClick: toggleFeedbackVisibility,\n        children: \"Hide Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-content\",\n        children: [\"Try using a strategy you haven\\u2019t used before like \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"affirming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 75\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"empathizing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 105\n        }, this), \"! Click on a strategy to learn more.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-feedback-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleFeedbackVisibility,\n        className: \"show-feedback-button\",\n        children: \"Show Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFinish,\n      children: \"Finish!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"IIsotvgIWfoFTdUVlaK3Ivr1+D8=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatInterface","currentSkill","currentScenario","onNavigate","_s","messages","setMessages","input","setInput","feedbackVisible","setFeedbackVisible","chatBoxRef","current","scrollTop","scrollHeight","handleSend","trim","userMessage","from","text","response","fetch","data","json","botMessage","botResponse","setTimeout","prevMessages","error","console","handleKeyPress","e","key","handleBackToSelectSkills","handleFinish","userConfirmed","window","confirm","open","toggleFeedbackVisibility","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","message","index","type","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["/Users/sachinallums/curis-apam/src/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ChatInterface.css';\n\nconst ChatInterface = ({ currentSkill, currentScenario, onNavigate }) => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n    const [feedbackVisible, setFeedbackVisible] = useState(true); // State to handle feedback visibility\n    const chatBoxRef = useRef(null);\n\n    useEffect(() => {\n        if (chatBoxRef.current) {\n            chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    const handleSend = async () => {\n        if (input.trim()) {\n            const userMessage = { from: 'user', text: input };\n            setMessages([...messages, userMessage]);\n            setInput('');\n\n            try {\n                const response = await fetch('/api/chatbot-response');\n                const data = await response.json();\n                const botMessage = { from: 'robot', text: data.botResponse || \"placeholder\" };\n\n                // Introduce a delay before adding the bot's message\n                setTimeout(() => {\n                    setMessages((prevMessages) => [...prevMessages, botMessage]);\n                }, 600);\n            } catch (error) {\n                console.error('Error fetching chatbot response:', error);\n                const botMessage = { from: 'robot', text: \"Failed to fetch response\" };\n\n                // Introduce a delay before adding the bot's message\n                setTimeout(() => {\n                    setMessages((prevMessages) => [...prevMessages, botMessage]);\n                }, 600);\n            }\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSend();\n        }\n    };\n\n    const handleBackToSelectSkills = () => {\n        onNavigate('start');\n    };\n\n    const handleFinish = () => {\n        const userConfirmed = window.confirm('Would you like to complete the simulation? You will be asked to fill out a google form about your experience.');\n        if (userConfirmed) {\n            window.open('https://forms.gle/dUgqouTzYBdy6jF67', '_blank');\n        }\n    };\n\n    const toggleFeedbackVisibility = () => { // Function to toggle feedback visibility\n        setFeedbackVisible(!feedbackVisible);\n    };\n\n    return (\n        <div className=\"chat-interface\">\n            <button onClick={handleBackToSelectSkills} className=\"back-button\">Back</button>\n            <h1>Learning Goal</h1>\n            <p>\n                Improve your <strong>{currentSkill} skills</strong> with Roberto by using some of the different strategies suggested below.\n                When you feel like you've achieved the learning goal, click on the finish button in the lower left or revisit an old chat by using\n                the menu on the left-hand side.\n            </p>\n            <div className=\"chat-box\" ref={chatBoxRef}>\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.from}`}>\n                        {message.from === 'robot' && (\n                            <div className=\"robot-name\">\n                                Roberto the Robot 🤖\n                            </div>\n                        )}\n                        {message.text}\n                    </div>\n                ))}\n            </div>\n            {feedbackVisible ? (\n                <div className=\"feedback-container\">\n                    <button className=\"feedback-header\" onClick={toggleFeedbackVisibility}>\n                        Hide Suggestions\n                    </button>\n                    <div className=\"feedback-content\">\n                        Try using a strategy you haven’t used before like <strong>affirming</strong> or <strong>empathizing</strong>! Click on a strategy to learn more.\n                    </div>\n                </div>\n            ) : (\n                <div className=\"show-feedback-container\">\n                    <button onClick={toggleFeedbackVisibility} className=\"show-feedback-button\">Show Suggestions</button>\n                </div>\n            )}\n            <div className=\"input-box\">\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    placeholder=\"Type message here...\"\n                />\n                <button onClick={handleSend}>Send</button>\n            </div>\n            <button onClick={handleFinish}>Finish!</button>\n        </div>\n    );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}